{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {defineDocumentType, defineNestedType, makeSource} from \"contentlayer2/source-files\";\r\n// import remarkGfm from \"remark-gfm\";\r\n// import rehypeSlug from \"rehype-slug\";\r\n// import {visit} from \"unist-util-visit\";\r\n// import RawPlugin from 'esbuild-plugin-raw'\r\n// import pluginCodeBlock from \"./plugins/codeBlock\";\r\n\r\nconst computedFields = {\r\n  slug: {\r\n    type: \"string\",\r\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n  },\r\n  slugAsParams: {\r\n    type: \"string\",\r\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\r\n  },\r\n  url: {type: \"string\", resolve: (doc) => `/${doc._raw.flattenedPath}`},\r\n};\r\n\r\nexport const Docs = defineDocumentType(() => ({\r\n  name: \"Docs\",\r\n  filePathPattern: `**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    // title: {type: \"string\", required: true},\r\n    // description: {type: \"string\", required: false},\r\n    // date: {type: \"date\", required: false},\r\n  },\r\n  // computedFields,\r\n}));\r\n\r\n// const AuthorProperties = defineNestedType(() => ({\r\n//   name: \"AuthorProperties\",\r\n//   fields: {\r\n//     name: {type: \"string\", required: true},\r\n//     link: {type: \"string\", required: false},\r\n//     avatar: {type: \"string\", required: false},\r\n//     username: {type: \"string\", required: false},\r\n//   },\r\n// }));\r\n//\r\n// export const BlogPost = defineDocumentType(() => ({\r\n//   name: \"BlogPost\",\r\n//   filePathPattern: `blog/**/*.mdx`,\r\n//   contentType: \"mdx\",\r\n//   fields: {\r\n//     title: {type: \"string\", required: true},\r\n//     description: {type: \"string\", required: true},\r\n//     date: {type: \"date\", required: true},\r\n//     draft: {type: \"boolean\", required: false},\r\n//     tags: {type: \"list\", of: {type: \"string\"}},\r\n//     author: {type: \"nested\", of: AuthorProperties, required: false},\r\n//     image: {type: \"string\", required: false},\r\n//   },\r\n//   computedFields: {\r\n//     ...computedFields,\r\n//     // Date format June 22nd 2023\r\n//     formattedDate: {\r\n//       type: \"string\",\r\n//       resolve: (doc) => {\r\n//         const date = new Date(doc.date);\r\n//         const options = {year: \"numeric\", month: \"long\", day: \"numeric\"};\r\n//         return date.toLocaleDateString(\"en-US\", options);\r\n//       },\r\n//     },\r\n//     // add https://nextui.org to the image path\r\n//     imageAsParams: {\r\n//       type: \"string\",\r\n//       resolve: (doc) => {\r\n//         const image = doc.image;\r\n//         if (image) {\r\n//           return `https://nextui.org${image}`;\r\n//         }\r\n//       },\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"docs\",\r\n  documentTypes: [Docs],\r\n  // mdx: {\r\n  //   remarkPlugins: [remarkGfm, pluginCodeBlock],\r\n  //   esbuildOptions(options) {\r\n  //     options.plugins ||= [];\r\n  //     options.plugins.unshift(RawPlugin());\r\n  //\r\n  //     return options;\r\n  //   },\r\n  //   rehypePlugins: [\r\n  //     rehypeSlug,\r\n  //     () => (tree) => {\r\n  //       visit(tree, \"element\", (node) => {\r\n  //         if (node.tagName === \"code\" && node.data && node.data.meta) {\r\n  //           node.properties.meta = node.data.meta;\r\n  //         }\r\n  //       });\r\n  //     },\r\n  //   ],\r\n  // },\r\n});\r\n"],
  "mappings": ";AAAA,SAAQ,oBAAoB,kBAAkB,kBAAiB;AAmBxD,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA;AAAA;AAAA;AAAA,EAIR;AAAA;AAEF,EAAE;AAiDF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBtB,CAAC;",
  "names": []
}
